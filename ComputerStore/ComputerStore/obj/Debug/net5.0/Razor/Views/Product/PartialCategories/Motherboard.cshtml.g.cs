#pragma checksum "C:\Users\hallc\Documents\GitHub\PC_Store\ComputerStore\ComputerStore\Views\Product\PartialCategories\Motherboard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fcc4ef590eaa5acaef43f60159f218d0cb33eaa5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_PartialCategories_Motherboard), @"mvc.1.0.view", @"/Views/Product/PartialCategories/Motherboard.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\hallc\Documents\GitHub\PC_Store\ComputerStore\ComputerStore\Views\_ViewImports.cshtml"
using ComputerStore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\hallc\Documents\GitHub\PC_Store\ComputerStore\ComputerStore\Views\_ViewImports.cshtml"
using ComputerStore.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fcc4ef590eaa5acaef43f60159f218d0cb33eaa5", @"/Views/Product/PartialCategories/Motherboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"67e7854bc2f9c50d63e1afcd180501b030ca7077", @"/Views/_ViewImports.cshtml")]
    public class Views_Product_PartialCategories_Motherboard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "GetSelectProducts", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<div class=\"filter-card\">\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fcc4ef590eaa5acaef43f60159f218d0cb33eaa54035", async() => {
                WriteLiteral(@"
        <input type=""hidden"" name=""category"" value=""Motherboard"" />

        <div id=""slider""></div>
        <div id=""slider_values_container"">
            <input id=""min-bar-val"" class=""bar-val"" type=""number"" name=""minPrice"" />
            <p>-</p>
            <input id=""max-bar-val"" class=""bar-val"" type=""number"" name=""maxPrice"" />
        </div>

        <button type=""button"" class=""accordion"">Manufacturer</button>
        <div class=""panel"">
            <label class=""container-filter"">
                AsRock
                <input type=""checkbox"" name=""values"" value=""Manufacturer AsRock"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Asus
                <input type=""checkbox"" name=""values"" value=""Manufacturer Asus"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Biostar
                <input type=""checkbox"" name=""va");
                WriteLiteral(@"lues"" value=""Manufacturer Biostar"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Gigabyte
                <input type=""checkbox"" name=""values"" value=""Manufacturer Gigabyte"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                MSI
                <input type=""checkbox"" name=""values"" value=""Manufacturer MSI"">
                <span class=""checkmark""></span>
            </label>
        </div>

        <button type=""button"" class=""accordion"">Socket</button>
        <div class=""panel"">
            <label class=""container-filter"">
                Socket 1150
                <input type=""checkbox"" name=""values"" value=""Socket 1150"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Socket 1151-V2
                <input type=""checkbox"" name=""values"" value=");
                WriteLiteral(@"""Socket 1151-V2"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Socket 1155
                <input type=""checkbox"" name=""values"" value=""Socket 1155"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Socket 1200
                <input type=""checkbox"" name=""values"" value=""Socket 1200"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Socket 1700
                <input type=""checkbox"" name=""values"" value=""Socket 1700"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Socket 2066
                <input type=""checkbox"" name=""values"" value=""Socket 2066"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
    ");
                WriteLiteral(@"            Socket 3647
                <input type=""checkbox"" name=""values"" value=""Socket 3647"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Socket AM3/AM3+
                <input type=""checkbox"" name=""values"" value=""Socket AM3/AM3+"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Socket AM4
                <input type=""checkbox"" name=""values"" value=""Socket AM4"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Socket TR4
                <input type=""checkbox"" name=""values"" value=""Socket TR4"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Socket TRX4
                <input type=""checkbox"" name=""values"" value=""Socket TRX4"">
                <span class=""checkma");
                WriteLiteral(@"rk""></span>
            </label>
        </div>

        <button type=""button"" class=""accordion"">Form factor</button>
        <div class=""panel"">
            <label class=""container-filter"">
                ATX
                <input type=""checkbox"" name=""values"" value=""FormFactor ATX"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                EATX
                <input type=""checkbox"" name=""values"" value=""FormFactor EATX"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                microATX
                <input type=""checkbox"" name=""values"" value=""FormFactor microATX"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                mini-ITX
                <input type=""checkbox"" name=""values"" value=""FormFactor mini-ITX"">
                <span class=""checkmark""></span>
        ");
                WriteLiteral(@"    </label>
        </div>

        <button type=""button"" class=""accordion"">Number of memory slots</button>
        <div class=""panel"">
            <label class=""container-filter"">
                12x
                <input type=""checkbox"" name=""values"" value=""MemorySlots 12"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                8x
                <input type=""checkbox"" name=""values"" value=""MemoryType 8"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                4x
                <input type=""checkbox"" name=""values"" value=""MemoryType 4"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                2x
                <input type=""checkbox"" name=""values"" value=""MemoryType 2"">
                <span class=""checkmark""></span>
            </label>
        </div>

        <");
                WriteLiteral(@"button type=""button"" class=""accordion"">Number of SATA</button>
        <div class=""panel"">
            <label class=""container-filter"">
                8 slots
                <input type=""checkbox"" name=""values"" value=""SATA 8"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                6 slots
                <input type=""checkbox"" name=""values"" value=""SATA 6"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                5 slots
                <input type=""checkbox"" name=""values"" value=""SATA 5"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                4 slots
                <input type=""checkbox"" name=""values"" value=""SATA 4"">
                <span class=""checkmark""></span>
            </label>
        </div>

        <button type=""button"" class=""accordion"">RGB Backlight</bu");
                WriteLiteral(@"tton>
        <div class=""panel"">
            <label class=""container-filter"">
                With RGB
                <input type=""checkbox"" name=""values"" value=""Backlight Yes"">
                <span class=""checkmark""></span>
            </label>
            <label class=""container-filter"">
                Without RGB
                <input type=""checkbox"" name=""values"" value=""Backlight No"">
                <span class=""checkmark""></span>
            </label>
        </div>

        <button type=""submit"" class=""accordion-btn"">Apply</button>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
